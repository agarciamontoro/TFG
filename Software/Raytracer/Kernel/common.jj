#ifndef __DEFINITIONS__
#define __DEFINITIONS__

// Debug switch
{{ DEBUG }}

// Declaration of the system size; i.e., the number of equations
#define SYSTEM_SIZE {{ SYSTEM_SIZE }}
#define DATA_SIZE {{ DATA_SIZE }}

// Declaration of the image parameters: number of rows and columns, as well as
// the total amount of pixels.
#define IMG_ROWS {{ IMG_ROWS }}
#define IMG_COLS {{ IMG_COLS }}
#define NUM_PIXELS {{ NUM_PIXELS }}

// Useful constant for collision detection
#define HALF_PI 1.57079632679489655799898173427209258079528808593750


// Bisect's constants
#define BISECT_TOL 0.000001
#define BISECT_MAX_ITER 100

// Butcher's tableau coefficients
#define A21 (1./5.)

#define A31 (3./40.)
#define A32 (9./40.)

#define A41 (44./45.)
#define A42 (- 56./15.)
#define A43 (32./9.)

#define A51 (19372./6561.)
#define A52 (- 25360./2187.)
#define A53 (64448./6561.)
#define A54 (- 212./729.)

#define A61 (9017./3168.)
#define A62 (- 355./33.)
#define A63 (46732./5247.)
#define A64 (49./176.)
#define A65 (- 5103./18656.)

#define A71 (35./384.)
#define A72 (0)
#define A73 (500./1113.)
#define A74 (125./192.)
#define A75 (- 2187./6784.)
#define A76 (11./84.)

#define C2 (1./5.)
#define C3 (3./10.)
#define C4 (4./5.)
#define C5 (8./9.)
#define C6 (1)
#define C7 (1)

#define E1 (71./57600.)
#define E2 (0)
#define E3 (- 71./16695.)
#define E4 (71./1920.)
#define E5 (- 17253./339200.)
#define E6 (22./525.)
#define E7 (- 1./40.)

// Black hole's spin and its square
#define __a  {{ SPIN }}
#define __a2 __a * __a

// Camera constants
#define __d {{ D }}
#define __camR {{ CAM_R }}
#define __camTheta {{ CAM_THETA }}
#define __camPhi {{ CAM_PHI }}
#define __camBeta {{ CAM_BETA }}

// Black hole constants
#define __b1 {{ B1 }}
#define __b2 {{ B2 }}

// Kerr constants
#define __ro {{ RO }}
#define __delta {{ DELTA }}
#define __pomega {{ POMEGA }}
#define __alpha {{ ALPHA }}
#define __omega {{ OMEGA }}

// RK45 parameters
#define rtoli {{ R_TOL_I }}
#define atoli {{ A_TOL_I }}
#define safe {{ SAFE }}
#define safeInv {{ SAFE_INV }}
#define fac1 {{ FAC_1 }}
#define fac1_inverse {{ FAC_1_INV }}
#define fac2 {{ FAC_2 }}
#define fac2_inverse {{ FAC_2_INV }}
#define beta {{ BETA }}
#define uround {{ UROUND }}

// RK45_alt parameters
#define SOLVER_DELTA {{ SOLVER_DELTA }}
#define SOLVER_EPSILON {{ SOLVER_EPSILON }}

// Convention for ray's status
#define HORIZON {{ HORIZON }}
#define DISK {{ DISK }}
#define SPHERE {{ SPHERE }}

#define horizonRadius {{ HORIZON_RADIUS }}
#define innerDiskRadius {{ INNER_DISK_RADIUS }}
#define outerDiskRadius {{ OUTER_DISK_RADIUS }}

// Definition of the data type
typedef {{ REAL }} Real;

typedef enum solverStatus{
    RK45_SUCCESS,
    RK45_FAILURE
} SolverStatus;

#endif // __DEFINITIONS__
